export default async function handler(req, res) {
  // Configurar CORS headers
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type, Authorization');

  // Manejar preflight requests
  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  // Solo permitir POST requests
  if (req.method !== 'POST') {
    return res.status(405).json({ error: 'Method not allowed' });
  }

  try {
    const { databaseId, notionToken } = req.body;
    
    if (!databaseId || !notionToken) {
      return res.status(400).json({ 
        error: 'Missing required fields',
        details: 'Both databaseId and notionToken are required' 
      });
    }

    console.log('Attempting to query Notion database:', databaseId.substring(0, 8) + '...');

    // Llamar a la API de Notion
    const response = await fetch(`https://api.notion.com/v1/databases/${databaseId}/query`, {
      method: 'POST',
      headers: {
        'Authorization': `Bearer ${notionToken}`,
        'Content-Type': 'application/json',
        'Notion-Version': '2022-06-28'
      },
      body: JSON.stringify({
        page_size: 100,
        sorts: [
          {
            property: 'KPI Name',
            direction: 'ascending'
          }
        ]
      })
    });

    if (!response.ok) {
      const errorText = await response.text();
      console.error('Notion API error:', response.status, errorText);
      
      return res.status(response.status).json({ 
        error: `Notion API error: ${response.status}`,
        details: errorText,
        hint: response.status === 401 ? 'Check your Notion token' : 
              response.status === 404 ? 'Check your database ID and permissions' : 
              'Unknown error'
      });
    }

    const data = await response.json();
    console.log('Successfully retrieved', data.results?.length || 0, 'records');
    
    return res.status(200).json(data);

  } catch (error) {
    console.error('Proxy error:', error);
    return res.status(500).json({ 
      error: 'Internal server error',
      details: error.message
    });
  }
}